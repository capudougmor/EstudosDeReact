{"ast":null,"code":"import * as React from 'react';\nimport { useSubscription } from 'use-subscription';\nimport useNavigation from './useNavigation';\n/**\n * Hook to get the current focus state of the screen. Returns a `true` if screen is focused, otherwise `false`.\n * This can be used if a component needs to render something based on the focus state.\n * It uses `use-subscription` under the hood for safer use in concurrent mode.\n */\n\nexport default function useIsFocused() {\n  const navigation = useNavigation(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const getCurrentValue = React.useCallback(navigation.isFocused, [navigation]);\n  const subscribe = React.useCallback(callback => {\n    const unsubscribeFocus = navigation.addListener('focus', callback);\n    const unsubscribeBlur = navigation.addListener('blur', callback);\n    return () => {\n      unsubscribeFocus();\n      unsubscribeBlur();\n    };\n  }, [navigation]);\n  return useSubscription({\n    getCurrentValue,\n    subscribe\n  });\n}","map":null,"metadata":{},"sourceType":"module"}