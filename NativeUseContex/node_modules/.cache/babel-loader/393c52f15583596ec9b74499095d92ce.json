{"ast":null,"code":"export default function checkLegacyPathConfig(config) {\n  let legacy = false;\n\n  if (config) {\n    // Assume legacy configuration if config has any other keys except `screens` and `initialRouteName`\n    legacy = Object.keys(config).some(key => key !== 'screens' && key !== 'initialRouteName');\n\n    if (legacy && (config.hasOwnProperty('screens') || config.hasOwnProperty('initialRouteName'))) {\n      throw new Error('Found invalid keys in the configuration object. See https://reactnavigation.org/docs/configuring-links/ for more details on the shape of the configuration object.');\n    }\n  }\n\n  if (legacy) {\n    // @ts-expect-error: we have incorrect type for config since we don't type legacy config\n    return [legacy, {\n      screens: config\n    }];\n  }\n\n  return [legacy, config];\n}","map":null,"metadata":{},"sourceType":"module"}