{"ast":null,"code":"import * as React from 'react';\nimport { getStateFromPath, getActionFromState, NavigationContext } from '@react-navigation/core';\nimport LinkingContext from './LinkingContext';\nexport default function useLinkTo() {\n  const navigation = React.useContext(NavigationContext);\n  const linking = React.useContext(LinkingContext);\n  const linkTo = React.useCallback(path => {\n    if (!path.startsWith('/')) {\n      throw new Error(\"The path must start with '/' (\".concat(path, \").\"));\n    }\n\n    if (navigation === undefined) {\n      throw new Error(\"Couldn't find a navigation object. Is your component inside a screen in a navigator?\");\n    }\n\n    const options = linking.options;\n    const state = (options === null || options === void 0 ? void 0 : options.getStateFromPath) ? options.getStateFromPath(path, options.config) : getStateFromPath(path, options === null || options === void 0 ? void 0 : options.config);\n\n    if (state) {\n      let root = navigation;\n      let current; // Traverse up to get the root navigation\n\n      while (current = root.dangerouslyGetParent()) {\n        root = current;\n      }\n\n      const action = getActionFromState(state);\n\n      if (action !== undefined) {\n        root.dispatch(action);\n      } else {\n        root.reset(state);\n      }\n    } else {\n      throw new Error('Failed to parse the path to a navigation state.');\n    }\n  }, [linking, navigation]);\n  return linkTo;\n}","map":null,"metadata":{},"sourceType":"module"}