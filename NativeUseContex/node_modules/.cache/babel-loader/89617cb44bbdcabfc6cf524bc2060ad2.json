{"ast":null,"code":"import _slicedToArray from \"/workspace/EstudosDeReact/NativeUseContex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\n\nexport default function useRegisterNavigator() {\n  const _React$useState = React.useState(() => nanoid()),\n        _React$useState2 = _slicedToArray(_React$useState, 1),\n        key = _React$useState2[0];\n\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\");\n  }\n\n  React.useEffect(() => {\n    const register = container.register,\n          unregister = container.unregister;\n    register(key);\n    return () => unregister(key);\n  }, [container, key]);\n  return key;\n}","map":null,"metadata":{},"sourceType":"module"}