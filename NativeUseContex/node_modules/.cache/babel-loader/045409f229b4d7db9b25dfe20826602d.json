{"ast":null,"code":"import _objectSpread from \"/workspace/EstudosDeReact/NativeUseContex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/workspace/EstudosDeReact/NativeUseContex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport GestureHandler from './GestureHandler';\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\n\nclass IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig(_ref) {\n    let _ref$minPointers = _ref.minPointers,\n        minPointers = _ref$minPointers === void 0 ? 2 : _ref$minPointers,\n        _ref$maxPointers = _ref.maxPointers,\n        maxPointers = _ref$maxPointers === void 0 ? 2 : _ref$maxPointers,\n        props = _objectWithoutProperties(_ref, [\"minPointers\", \"maxPointers\"]);\n\n    return super.updateGestureConfig(_objectSpread({\n      minPointers,\n      maxPointers\n    }, props));\n  }\n\n  isGestureEnabledForEvent({\n    minPointers,\n    maxPointers\n  }, recognizer, {\n    maxPointers: pointerLength\n  }) {\n    if (pointerLength > maxPointers) {\n      return {\n        failed: true\n      };\n    }\n\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount\n    };\n  }\n\n}\n\nexport default IndiscreteGestureHandler;","map":{"version":3,"sources":["/workspace/EstudosDeReact/NativeUseContex/node_modules/react-native-gesture-handler/web/IndiscreteGestureHandler.js"],"names":["GestureHandler","IndiscreteGestureHandler","shouldEnableGestureOnSetup","updateGestureConfig","minPointers","maxPointers","props","isGestureEnabledForEvent","recognizer","pointerLength","failed","validPointerCount","success"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AAEA;;;;AAGA,MAAMC,wBAAN,SAAuCD,cAAvC,CAAsD;AACpD,MAAIE,0BAAJ,GAAiC;AAC/B,WAAO,KAAP;AACD;;AAEDC,EAAAA,mBAAmB,OAAiD;AAAA,gCAA9CC,WAA8C;AAAA,QAA9CA,WAA8C,iCAAhC,CAAgC;AAAA,gCAA7BC,WAA6B;AAAA,QAA7BA,WAA6B,iCAAf,CAAe;AAAA,QAATC,KAAS;;AAClE,WAAO,MAAMH,mBAAN;AACLC,MAAAA,WADK;AAELC,MAAAA;AAFK,OAGFC,KAHE,EAAP;AAKD;;AAEDC,EAAAA,wBAAwB,CACtB;AAAEH,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GADsB,EAEtBG,UAFsB,EAGtB;AAAEH,IAAAA,WAAW,EAAEI;AAAf,GAHsB,EAItB;AACA,QAAIA,aAAa,GAAGJ,WAApB,EAAiC;AAC/B,aAAO;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAAP;AACD;;AACD,UAAMC,iBAAiB,GAAGF,aAAa,IAAIL,WAA3C;AACA,WAAO;AACLQ,MAAAA,OAAO,EAAED;AADJ,KAAP;AAGD;;AAzBmD;;AA2BtD,eAAeV,wBAAf","sourcesContent":["import GestureHandler from './GestureHandler';\n\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\nclass IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({ minPointers = 2, maxPointers = 2, ...props }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers },\n    recognizer,\n    { maxPointers: pointerLength }\n  ) {\n    if (pointerLength > maxPointers) {\n      return { failed: true };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount,\n    };\n  }\n}\nexport default IndiscreteGestureHandler;\n"]},"metadata":{},"sourceType":"module"}